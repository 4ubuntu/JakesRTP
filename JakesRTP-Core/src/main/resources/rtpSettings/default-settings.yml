# The name of this config section is 'default-settings', each section must have a unique name

# Should we load this config? If false, this config will not be usable anywhere.
# For finer control, enable or disable command-enabled and require-explicit-permission.
enabled: true
# Can a player use this config with `/rtp`?
# Set to false if you plan on having this config exclusively for rtp-on-first-join or rtp-on-death.
command-enabled: true
# The player will only be able to use this config if they have the permission:
#   'jakesrtp.use.[name]' where the default config would be 'jakesrtp.use.default'.
# This setting is most useful when there are overlapping configurations.
# Note: If used along side `rtp-on-death.require-permission` then the player will need both permissions.
require-explicit-permission: false
# The priority of the config. Higher priority are preferred over lower ones.
# Only useful if there are overlapping configurations (multiple configs that include the same worlds).
priority: 1
# Which worlds will this configuration apply to?
enabled-worlds:
  - 'world'
force-destination-world: # Forces the world that the RTP will land you in. If this is true, then 'enabled worlds' no
  enabled: false         #   longer represents worlds that you can RTP IN, but worlds you can RTP FROM, always
  destination: 'world'   #   landing you in the world specified by 'destination'.
distribution: 'default-symmetric' # Create/edit a distribution in the `default-symmetric.yml` file, and put the name here.
location-checking-profile: # Which method should we use to find a safe location? Since this plugin is meant to work
  allowed-values: #        #   'out-of-the-box' without need of configuring, the 'auto' option has been included.
    a: "Auto"              # Auto chooses middle-out for the nether and top-down for everything else.
    b: "Top down"          # Starts the search at the high bound and moves down until it finds the ground.
    c: "Middle out"        # Starts the search between high and low and moves up and down to find land.
  value: a              # Top-down will never spawn you in a cave. Middle-out is intended for underground teleports.
cooldown: # Cooldown between uses. Can be bypassed with permission node jakesrtp.nocooldown
  seconds: 30  # Default: 30
then-execute: [ ] # Executes commands as console after a player is rtp'd. Note: remove the `[]` before adding commands.
#    - 'tellraw %PLAYER% {"text":"You have been teleported to %LOCATION% in %WORLD%!"}'
#    - 'tellraw %PLAYER% {"text":"All placeholders are listed at the bottom of this file."}'
############## # Everything past this point in the config probably does not need to get changed
bounds: # The lowest and highest points a player can be RTP'd to.
  low: 32     # Default: 32
  high: 255   # Default: 255  | SET THIS TO 127 FOR NETHER WORLDS IF location-checking-profile IS NOT ON AUTO
check-radius: # How many blocks away from the initial spot to check.
  x-z: 2      # Default: 2    | Max spots to check per attempt is equal to:
  vert: 2     # Default: 2    | (2*vert+1)*(2*(x-z)+1)^2
max-attempts: # If the random location, and all (by default 125) close spots are found to be unsafe,
  value: 10   #   how many attempts can we make? Minimum: 1; Default: 10
preparations: # Preparing spots to teleport to. Note: These will be ignored if the center is players location.
  cache-locations: 10 # The number of safe rtp spots to hold on to. For best performance, keep this larger than 2.
#
#     = = = = = = = = = = = = = = =
#     = End of the document notes =
#     = = = = = = = = = = = = = = =
#
# Placeholders - These can be used only in rtpSettings `then-execute` list items. Typing a placeholder wrong will
# result in the word 'null' instead of the placeholders value. Placeholders may be in upper or lower case.
#   %player%              The players minecraft name
#   %player_display_name% The players 'display-name' or nickname
#   %location%            The location the player landed, formatted like this: world (867, 53, -9)
#   %world%               The world the player landed in, formatted like this: world
#   %x% or %y% or %z%     Each of these will give its corresponding value, formatted like this: 86
#   %location_old%        The location of the player before they moved.
#   %world_old%           The world the player was in before they are moved.
#   %x_old% or %y_old% or %z_old% The x or y or z location of the player before they were moved.